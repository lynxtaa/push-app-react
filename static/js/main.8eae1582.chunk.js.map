{"version":3,"sources":["components/Header.tsx","components/NavPills.tsx","components/TimerButton.tsx","components/Portal.tsx","components/Alert.tsx","components/ButtonGroup.tsx","components/TimerLabel.tsx","containers/TimerContainer.tsx","hooks/useInterval.ts","containers/HeaderContainer.tsx","containers/ErrorBoundary.tsx","components/App.tsx","containers/Home.tsx","components/PushList.tsx","components/PushListItem.tsx","containers/PushListContainer.tsx","containers/Sets.tsx","hooks/useFetchedData.ts","AppRouter.tsx","serviceWorker.ts","index.tsx"],"names":["Header","children","NavPills","links","className","map","link","text","key","to","TimerButton","onClick","value","active","type","Portal","id","portalRef","useRef","document","getElementById","createElement","useEffect","portal","current","body","insertBefore","firstChild","removeChild","ReactDOM","createPortal","Alert","role","aria-label","aria-hidden","ButtonGroup","TimerLabel","number","useSpring","button","interpolate","Math","round","Timer","times","useState","seconds","countdown","setCountdown","counter","setCounter","timerActive","setTimerActive","start","callback","delay","savedCallback","setInterval","clearInterval","useInterval","delta","Date","now","floor","handleClick","useCallback","event","Number","target","resetCountdown","runTimer","label","week","HeaderContainer","TimerContainer","ErrorBoundary","state","error","errorInfo","this","setState","toString","componentStack","props","React","Component","withRouter","Home","day","setDay","setWeek","get","then","data","PushList","PushListItem","isHidden","style","from","opacity","marginBottom","height","config","gentle","reverse","li","visibility","o","PushListContainer","sets","hidden","setHidden","set","includes","Sets","url","setData","setError","abortController","AbortController","fetch","signal","res","json","catch","err","name","abort","useFetchedData","process","schedule","matchParams","useParams","message","weekSchedule","find","weekNum","Error","days","i","AppRouter","path","exact","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oPAQeA,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyB,gCAASA,ICmBlCC,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIC,UAAU,sBACZD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACV,wBAAIH,UAAU,WAAWI,IAAKF,GAC7B,kBAAC,IAAD,CAASG,GAAIH,EAAMF,UAAU,YAC3BG,S,OCESG,EAXK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,IAAmBC,cAAnB,SAAmCZ,EAAnC,EAAmCA,SAAnC,OACnB,4BACCG,UAAW,mBAAqBS,EAAS,UAAY,IACrDF,QAASA,EACTG,KAAK,SACLF,MAAOA,GAENX,ICaYc,EArBA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIf,EAAsB,EAAtBA,SACfgB,EAAYC,iBACjBC,SAASC,eAAeJ,IAAOG,SAASE,cAAc,QAgBvD,OAbAC,qBAAU,WACT,IAAMC,EAASN,EAAUO,QAOzB,OALKL,SAASC,eAAeJ,KAC5BO,EAAOP,GAAKA,EACZG,SAASM,KAAKC,aAAaH,EAAQJ,SAASM,KAAKE,aAG3C,WACNR,SAASM,KAAKG,YAAYL,OAIrBM,IAASC,aAAa7B,EAAUgB,EAAUO,UCJnCO,EAdD,SAAC,GAAD,IAAG9B,EAAH,EAAGA,SAAUU,EAAb,EAAaA,QAAb,OACb,kBAAC,EAAD,CAAQK,GAAG,UACV,yBACCZ,UAAU,4DACV4B,KAAK,SAEL,4BAAQlB,KAAK,SAASV,UAAU,QAAQO,QAASA,EAASsB,aAAW,SACpE,0BAAMC,cAAY,QAAlB,SAEAjC,KCTWkC,EAFK,SAAC,GAAD,IAAGlC,EAAH,EAAGA,SAAH,OAAyB,yBAAKG,UAAU,aAAaH,I,QCc1DmC,EAVI,SAAC,GAAkC,IAAhCnC,EAA+B,EAA/BA,SAAUU,EAAqB,EAArBA,QACvB0B,EAAWC,YAAU,CAAED,OAAQpC,IAA/BoC,OAER,OACC,kBAAC,IAASE,OAAV,CAAiBnC,UAAU,uBAAuBO,QAASA,EAASG,KAAK,UACjEuB,EAP0BG,aAAY,SAAC5B,GAAD,OAAmB6B,KAAKC,MAAM9B,QCS9E,IAiEe+B,EAjED,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAmB,EACDC,mBAAiBD,EAAM,GAAGE,SADzB,mBAC5BC,EAD4B,KACjBC,EADiB,OAELH,mBAAiBD,EAAM,GAAGE,SAFrB,mBAE5BG,EAF4B,KAEnBC,EAFmB,OAGGL,oBAAkB,GAHrB,mBAG5BM,EAH4B,KAGfC,EAHe,KAK7BC,EAAQnC,iBAAe,ICpBf,SAAqBoC,EAAsBC,GACzD,IAAMC,EAAgBtC,iBAAiBoC,GAEvChC,qBAAU,WACTkC,EAAchC,QAAU8B,KAGzBhC,qBAAU,WACT,GAAc,OAAViC,EAAgB,CACnB,IAAMvC,EAAKyC,aAAY,kBAAMD,EAAchC,YAAW+B,GACtD,OAAO,kBAAMG,cAAc1C,OAE1B,CAACuC,IDUJI,EACC,WACC,IAAMC,EAAQC,KAAKC,MAAQT,EAAM7B,QAC3BuB,EAAYE,EAAUR,KAAKsB,MAAMH,EAAQ,KAC3Cb,EAAY,EACfC,EAAaD,IAEbC,EAAa,GACbI,GAAe,MAGjBD,EAAc,IAAO,MAGtB,IAAMa,EAAcC,uBAAY,SAAAC,GAC/B,IAAMtD,EAAQuD,OAAOD,EAAME,OAAOxD,OAClCsC,EAAWtC,GACXoC,EAAapC,GACbwC,GAAe,KACb,IAEGiB,EAAiBJ,uBAAY,WAClCjB,EAAaC,GACbG,GAAe,KACb,CAACH,IAEEqB,EAAWL,uBAAY,WAC5BZ,EAAM7B,QAAUqC,KAAKC,MACrBV,GAAe,KACb,IAEH,OACC,yBAAKhD,UAAU,QACC,IAAd2C,GACA,kBAAC,EAAD,CAAOpC,QAAS0D,GACf,wCAIF,kBAAC,EAAD,KACEzB,EAAMvC,KAAI,gBAAGyC,EAAH,EAAGA,QAASyB,EAAZ,EAAYA,MAAZ,OACV,kBAAC,EAAD,CACC1D,OAAQoC,IAAYH,EACpBtC,IAAKsC,EACLnC,QAASqD,EACTpD,MAAOkC,GAENyB,MAGH,kBAAC,EAAD,CAAY5D,QAASwC,EAAckB,EAAiBC,GAClDvB,MErEA5C,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGE,KAAI,SAAAmE,GAAI,MAAK,CAAElE,KAAK,IAAD,OAAMkE,GAAQjE,KAAK,QAAD,OAAUiE,OAC1E5B,EAAQ,CACb,CAAE2B,MAAO,QAASzB,QAAS,IAC3B,CAAEyB,MAAO,QAASzB,QAAS,MAUb2B,EAPS,kBACvB,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUtE,MAAOA,IACjB,kBAACuE,EAAD,CAAgB9B,MAAOA,M,qCCsBV+B,E,2MAzBdC,MAAe,G,iFAEGC,EAAcC,GAC/BC,KAAKC,SAAS,CAAEH,QAAOC,gB,+BAIvB,OAAIC,KAAKH,MAAME,UAEb,6BACC,wBAAI1E,UAAU,eAAd,wBACA,+BACC,iCACE2E,KAAKH,MAAMC,OAASE,KAAKH,MAAMC,MAAMI,WACrCF,KAAKH,MAAME,UAAUI,kBAOpBH,KAAKI,MAAMlF,a,GAtBQmF,IAAMC,WCQnBC,eATH,SAAC,GAAD,IAAGrF,EAAH,EAAGA,SAAH,OACX,0BAAMG,UAAU,iBACf,kBAAC,EAAD,KACC,kBAAC,EAAD,MACCH,O,QCSWsF,MAdf,WAAiB,IAAD,EACO1C,qBADP,mBACR2C,EADQ,KACHC,EADG,OAES5C,qBAFT,mBAER2B,EAFQ,KAEFkB,EAFE,KAWf,OAPApE,qBAAU,WACTqE,YAAU,SAASC,MAAK,SAAAC,GACvBJ,EAAQI,GAAQA,EAAKL,KAAQ,GAC7BE,EAASG,GAAQA,EAAKrB,MAAS,QAE9B,IAEIgB,GAAOhB,EAAO,kBAAC,IAAD,CAAU/D,GAAE,WAAM+D,EAAN,YAAcgB,KAAY,M,QCV7CM,EAJE,SAAC,GAAD,IAAG7F,EAAH,EAAGA,SAAH,OAChB,wBAAIG,UAAU,0BAA0BH,I,QCyB1B8F,EAvBuB,SAAC,GAAqC,IAAnCpF,EAAkC,EAAlCA,QAASV,EAAyB,EAAzBA,SAAU+F,EAAe,EAAfA,SACrDC,EAAQ3D,YAAU,CACvB4D,KAAM,CAAEC,QAAS,EAAGC,aAAc,MAAOC,OAAQ,OACjD5F,GAAI,CAAE0F,QAAS,EAAGC,aAAc,OAAQC,OAAQ,QAChDC,OAAQA,IAAOC,OACfC,QAASR,IAGV,OACC,kBAAC,IAASS,GAAV,CACCR,MAAK,eACDA,EADC,CAGJS,WAAYT,EAAME,QAAS3D,aAAY,SAAAmE,GAAC,OAAW,IAANA,EAAU,SAAW,gBAGnE,4BAAQ7F,KAAK,SAASV,UAAU,kCAAkCO,QAASA,GACzEV,KCUU2G,EAtBW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAkB,EAClBhE,mBAAmB,IADD,mBACvCiE,EADuC,KAC/BC,EAD+B,KAO9C,OAJAzF,qBAAU,WACTyF,EAAU,MACR,CAACF,IAGH,kBAAC,EAAD,KACEA,EAAKxG,KAAI,gBAAG2G,EAAH,EAAGA,IAAKhG,EAAR,EAAQA,GAAR,OACT,kBAAC,EAAD,CACCR,IAAKQ,EACLL,QAAS,kBAAMoG,EAAU,GAAD,mBAAKD,GAAL,CAAa9F,MACrCgF,SAAUc,EAAOG,SAASjG,IAEzBgG,QCgCSE,MAhDf,WAAiB,IAAD,ECXD,SAA2BC,GAAwC,IAAD,EACxDtE,mBAAmB,MADqC,mBACzEgD,EADyE,KACnEuB,EADmE,OAEtDvE,mBAAuB,MAF+B,mBAEzEgC,EAFyE,KAElEwC,EAFkE,KAkBhF,OAdA/F,qBAAU,WACT8F,EAAQ,MACRC,EAAS,MAET,IAAMC,EAAkB,IAAIC,gBAO5B,OALAC,MAAML,EAAK,CAAEM,OAAQH,EAAgBG,SACnC7B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,UAChB/B,KAAKwB,GACLQ,OAAM,SAACC,GAAD,MAA6B,eAAbA,EAAIC,MAAyBT,EAASQ,MAEvD,kBAAMP,EAAgBS,WAC3B,CAACZ,IAEG,CAACtB,EAAMhB,GDNYmD,CAAc,UACpCC,kBADoC,mBADzB,mBACRC,EADQ,KACErD,EADF,KAITsD,EAAcC,cAEZ5C,EAAc2C,EAAd3C,IAAKhB,EAAS2D,EAAT3D,KAMb,GAJAlD,qBAAU,WACT0F,YAAI,QAAS,CAAExB,MAAKhB,WAClB,CAACgB,EAAKhB,IAELK,EACH,OAAO,wBAAIzE,UAAU,eAAeyE,EAAMwD,SAG3C,IAAKH,EACJ,OAAO,0CAGR,IAAK1C,EACJ,OAAO,kBAAC,IAAD,CAAU/E,GAAE,WAAM+D,EAAN,QAGpB,IAAM8D,EAAeJ,EAASK,MAAK,qBAAGC,UAA0BrE,OAAOK,MAEvE,IAAK8D,EACJ,MAAM,IAAIG,MAAJ,eAAkBjE,EAAlB,2BAGP,IAAMqC,EAAOyB,EAAaI,KAAKvE,OAAOqB,GAAO,GAAGnF,KAAI,SAAC2G,EAAK2B,GAAN,MAAa,CAChE3H,GAAG,GAAD,OAAKwD,EAAL,YAAagB,EAAb,YAAoBmD,GACtB3B,UAGK7G,EAAQ,CAAC,EAAG,EAAG,GAAGE,KAAI,SAAAmF,GAAG,MAAK,CACnClF,KAAK,IAAD,OAAMkE,EAAN,YAAcgB,GAClBjF,KAAK,OAAD,OAASiF,OAGd,OACC,6BACC,kBAAC,EAAD,CAAUrF,MAAOA,IACjB,kBAAC,EAAD,CAAmB0G,KAAMA,MEhCb+B,EAlBG,kBACjB,kBAAC,aAAD,KACC,kBAAC,IAAD,KACC,kBAAC,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACpB,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOD,KAAK,0BACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAUpI,GAAG,WCLEsI,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2DCZHtH,IAASuH,OAAO,kBAAC,EAAD,MAAejI,SAASC,eAAe,SDiIlD,kBAAmBiI,WACtBA,UAAUC,cAAcC,MAAM3D,MAAK,SAAA4D,GAClCA,EAAaC,kB","file":"static/js/main.8eae1582.chunk.js","sourcesContent":["import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n}\n\nconst Header = ({ children }: Props) => <header>{children}</header>\n\nexport default Header\n","import React from 'react'\n\nimport { NavLink } from 'react-router-dom'\n\ninterface Link {\n\tlink: string\n\ttext: string\n}\n\ninterface Props {\n\tlinks: Link[]\n}\n\nconst NavPills = ({ links }: Props) => (\n\t<ul className=\"nav nav-pills mb-3\">\n\t\t{links.map(({ link, text }) => (\n\t\t\t<li className=\"nav-item\" key={link}>\n\t\t\t\t<NavLink to={link} className=\"nav-link\">\n\t\t\t\t\t{text}\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t))}\n\t</ul>\n)\n\nexport default NavPills\n","import React from 'react'\n\ninterface Props {\n\tactive?: boolean\n\tchildren: React.ReactNode\n\tonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void\n\tvalue: number\n}\n\nconst TimerButton = ({ onClick, value, active = false, children }: Props) => (\n\t<button\n\t\tclassName={'btn btn-primary' + (active ? ' active' : '')}\n\t\tonClick={onClick}\n\t\ttype=\"button\"\n\t\tvalue={value}\n\t>\n\t\t{children}\n\t</button>\n)\n\nexport default TimerButton\n","import { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tid: string\n}\n\nconst Portal = ({ id, children }: Props) => {\n\tconst portalRef = useRef<HTMLElement>(\n\t\tdocument.getElementById(id) || document.createElement('div'),\n\t)\n\n\tuseEffect(() => {\n\t\tconst portal = portalRef.current\n\n\t\tif (!document.getElementById(id)) {\n\t\t\tportal.id = id\n\t\t\tdocument.body.insertBefore(portal, document.body.firstChild)\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.body.removeChild(portal)\n\t\t}\n\t})\n\n\treturn ReactDOM.createPortal(children, portalRef.current)\n}\n\nexport default Portal\n","import React from 'react'\nimport Portal from './Portal'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void\n}\n\nconst Alert = ({ children, onClick }: Props) => (\n\t<Portal id=\"alerts\">\n\t\t<div\n\t\t\tclassName=\"container alert alert-warning alert-dismissible fade show\"\n\t\t\trole=\"alert\"\n\t\t>\n\t\t\t<button type=\"button\" className=\"close\" onClick={onClick} aria-label=\"Close\">\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t\t{children}\n\t\t</div>\n\t</Portal>\n)\n\nexport default Alert\n","import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n}\n\nconst ButtonGroup = ({ children }: Props) => <div className=\"btn-group\">{children}</div>\n\nexport default ButtonGroup\n","import React from 'react'\nimport { animated, useSpring } from 'react-spring'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void\n}\n\nconst round = (value: any) => value.interpolate((value: number) => Math.round(value))\n\nconst TimerLabel = ({ children, onClick }: Props) => {\n\tconst { number } = useSpring({ number: children })\n\n\treturn (\n\t\t<animated.button className=\"btn btn-outline-info\" onClick={onClick} type=\"button\">\n\t\t\t{round(number)}\n\t\t</animated.button>\n\t)\n}\n\nexport default TimerLabel\n","import React, { useCallback, useState, useRef } from 'react'\r\n\r\nimport TimerButton from 'components/TimerButton'\r\nimport Alert from 'components/Alert'\r\nimport ButtonGroup from 'components/ButtonGroup'\r\nimport TimerLabel from 'components/TimerLabel'\r\nimport useInterval from '../hooks/useInterval'\r\n\r\ninterface Time {\r\n\tseconds: number\r\n\tlabel: string\r\n}\r\n\r\ninterface Props {\r\n\ttimes: Time[]\r\n}\r\n\r\nconst Timer = ({ times }: Props) => {\r\n\tconst [countdown, setCountdown] = useState<number>(times[0].seconds)\r\n\tconst [counter, setCounter] = useState<number>(times[0].seconds)\r\n\tconst [timerActive, setTimerActive] = useState<boolean>(false)\r\n\r\n\tconst start = useRef<number>(0)\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tconst delta = Date.now() - start.current\r\n\t\t\tconst countdown = counter - Math.floor(delta / 1000)\r\n\t\t\tif (countdown > 0) {\r\n\t\t\t\tsetCountdown(countdown)\r\n\t\t\t} else {\r\n\t\t\t\tsetCountdown(0)\r\n\t\t\t\tsetTimerActive(false)\r\n\t\t\t}\r\n\t\t},\r\n\t\ttimerActive ? 1000 : null,\r\n\t)\r\n\r\n\tconst handleClick = useCallback(event => {\r\n\t\tconst value = Number(event.target.value)\r\n\t\tsetCounter(value)\r\n\t\tsetCountdown(value)\r\n\t\tsetTimerActive(false)\r\n\t}, [])\r\n\r\n\tconst resetCountdown = useCallback(() => {\r\n\t\tsetCountdown(counter)\r\n\t\tsetTimerActive(false)\r\n\t}, [counter])\r\n\r\n\tconst runTimer = useCallback(() => {\r\n\t\tstart.current = Date.now()\r\n\t\tsetTimerActive(true)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"mb-3\">\r\n\t\t\t{countdown === 0 && (\r\n\t\t\t\t<Alert onClick={resetCountdown}>\r\n\t\t\t\t\t<b>Do next!</b>\r\n\t\t\t\t</Alert>\r\n\t\t\t)}\r\n\r\n\t\t\t<ButtonGroup>\r\n\t\t\t\t{times.map(({ seconds, label }) => (\r\n\t\t\t\t\t<TimerButton\r\n\t\t\t\t\t\tactive={counter === seconds}\r\n\t\t\t\t\t\tkey={seconds}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\tvalue={seconds}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t</TimerButton>\r\n\t\t\t\t))}\r\n\t\t\t\t<TimerLabel onClick={timerActive ? resetCountdown : runTimer}>\r\n\t\t\t\t\t{countdown}\r\n\t\t\t\t</TimerLabel>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Timer\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: number | null) {\r\n\tconst savedCallback = useRef<Function>(callback)\r\n\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (delay !== null) {\r\n\t\t\tconst id = setInterval(() => savedCallback.current(), delay)\r\n\t\t\treturn () => clearInterval(id)\r\n\t\t}\r\n\t}, [delay])\r\n}\r\n","import React from 'react'\n\nimport Header from 'components/Header'\nimport NavPills from 'components/NavPills'\nimport TimerContainer from 'containers/TimerContainer'\n\nconst links = [1, 2, 3, 4, 5, 6].map(week => ({ link: `/${week}`, text: `Week ${week}` }))\nconst times = [\n\t{ label: '1 min', seconds: 60 },\n\t{ label: '2 min', seconds: 120 },\n]\n\nconst HeaderContainer = () => (\n\t<Header>\n\t\t<NavPills links={links} />\n\t\t<TimerContainer times={times} />\n\t</Header>\n)\n\nexport default HeaderContainer\n","import React from 'react'\r\n\r\ninterface Props {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\ninterface State {\r\n\terror?: Error\r\n\terrorInfo?: React.ErrorInfo\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n\tstate: State = {}\r\n\r\n\tcomponentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n\t\tthis.setState({ error, errorInfo })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.errorInfo) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className=\"text-danger\">Something went wrong</h2>\r\n\t\t\t\t\t<small>\r\n\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t{this.state.error && this.state.error.toString()}\r\n\t\t\t\t\t\t\t{this.state.errorInfo.componentStack}\r\n\t\t\t\t\t\t</details>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport HeaderContainer from 'containers/HeaderContainer'\nimport ErrorBoundary from 'containers/ErrorBoundary'\n\ntype Props = RouteComponentProps & {\n\tchildren: React.ReactNode\n}\n\nconst App = ({ children }: Props) => (\n\t<main className=\"container p-3\">\n\t\t<ErrorBoundary>\n\t\t\t<HeaderContainer />\n\t\t\t{children}\n\t\t</ErrorBoundary>\n\t</main>\n)\n\nexport default withRouter(App)\n","import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { get } from 'idb-keyval'\n\ninterface Data {\n\tday?: number\n\tweek?: number\n}\n\nfunction Home() {\n\tconst [day, setDay] = useState<number>()\n\tconst [week, setWeek] = useState<number>()\n\n\tuseEffect(() => {\n\t\tget<Data>('route').then(data => {\n\t\t\tsetDay((data && data.day) || 1)\n\t\t\tsetWeek((data && data.week) || 1)\n\t\t})\n\t}, [])\n\n\treturn day && week ? <Redirect to={`/${week}/${day}`} /> : null\n}\n\nexport default Home\n","import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n}\n\nconst PushList = ({ children }: Props) => (\n\t<ul className=\"pushlist list-unstyled\">{children}</ul>\n)\n\nexport default PushList\n","import React from 'react'\nimport { useSpring, animated, config } from 'react-spring'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tisHidden?: boolean\n\tonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void\n}\n\nconst PushListItem: React.FC<Props> = ({ onClick, children, isHidden }) => {\n\tconst style = useSpring({\n\t\tfrom: { opacity: 0, marginBottom: '0px', height: '0px' },\n\t\tto: { opacity: 1, marginBottom: '16px', height: '40px' },\n\t\tconfig: config.gentle,\n\t\treverse: isHidden,\n\t})\n\n\treturn (\n\t\t<animated.li\n\t\t\tstyle={{\n\t\t\t\t...style,\n\t\t\t\t// @ts-ignore\n\t\t\t\tvisibility: style.opacity!.interpolate(o => (o === 0 ? 'hidden' : 'visible')),\n\t\t\t}}\n\t\t>\n\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary w-100\" onClick={onClick}>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t</animated.li>\n\t)\n}\n\nexport default PushListItem\n","import React, { useState, useEffect } from 'react'\n\nimport PushList from 'components/PushList'\nimport PushListItem from 'components/PushListItem'\n\ninterface Set {\n\tid: string\n\tset: number\n}\n\ninterface Props {\n\tsets: Set[]\n}\n\nconst PushListContainer = ({ sets }: Props) => {\n\tconst [hidden, setHidden] = useState<string[]>([])\n\n\tuseEffect(() => {\n\t\tsetHidden([])\n\t}, [sets])\n\n\treturn (\n\t\t<PushList>\n\t\t\t{sets.map(({ set, id }) => (\n\t\t\t\t<PushListItem\n\t\t\t\t\tkey={id}\n\t\t\t\t\tonClick={() => setHidden([...hidden, id])}\n\t\t\t\t\tisHidden={hidden.includes(id)}\n\t\t\t\t>\n\t\t\t\t\t{set}\n\t\t\t\t</PushListItem>\n\t\t\t))}\n\t\t</PushList>\n\t)\n}\n\nexport default PushListContainer\n","import React, { useEffect } from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { set } from 'idb-keyval'\n\nimport NavPills from 'components/NavPills'\nimport PushListContainer from './PushListContainer'\nimport useFetchedData from '../hooks/useFetchedData'\n\ntype ScheduleItem = {\n\tweekNum: number\n\tdays: number[][]\n}\n\nfunction Sets() {\n\tconst [schedule, error] = useFetchedData<ScheduleItem[]>(\n\t\t`${process.env.PUBLIC_URL}/schedule.json`,\n\t)\n\tconst matchParams = useParams<{ day?: string; week: string }>()\n\n\tconst { day, week } = matchParams\n\n\tuseEffect(() => {\n\t\tset('route', { day, week })\n\t}, [day, week])\n\n\tif (error) {\n\t\treturn <h2 className=\"text-danger\">{error.message}</h2>\n\t}\n\n\tif (!schedule) {\n\t\treturn <h2>Loading...</h2>\n\t}\n\n\tif (!day) {\n\t\treturn <Redirect to={`/${week}/1`} />\n\t}\n\n\tconst weekSchedule = schedule.find(({ weekNum }) => weekNum === Number(week))\n\n\tif (!weekSchedule) {\n\t\tthrow new Error(`Week ${week} not found in schedule`)\n\t}\n\n\tconst sets = weekSchedule.days[Number(day) - 1].map((set, i) => ({\n\t\tid: `${week}-${day}-${i}`,\n\t\tset,\n\t}))\n\n\tconst links = [1, 2, 3].map(day => ({\n\t\tlink: `/${week}/${day}`,\n\t\ttext: `Day ${day}`,\n\t}))\n\n\treturn (\n\t\t<div>\n\t\t\t<NavPills links={links} />\n\t\t\t<PushListContainer sets={sets} />\n\t\t</div>\n\t)\n}\n\nexport default Sets\n","import { useState, useEffect } from 'react'\r\n\r\nexport default function useFetchedData<T>(url: string): [T | null, Error | null] {\r\n\tconst [data, setData] = useState<T | null>(null)\r\n\tconst [error, setError] = useState<Error | null>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(null)\r\n\t\tsetError(null)\r\n\r\n\t\tconst abortController = new AbortController()\r\n\r\n\t\tfetch(url, { signal: abortController.signal })\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(setData)\r\n\t\t\t.catch((err: Error) => err.name !== 'AbortError' && setError(err))\r\n\r\n\t\treturn () => abortController.abort()\r\n\t}, [url])\r\n\r\n\treturn [data, error]\r\n}\r\n","import React, { StrictMode } from 'react'\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport App from 'components/App'\r\nimport Home from 'containers/Home'\r\nimport Sets from 'containers/Sets'\r\n\r\nconst AppRouter = () => (\r\n\t<StrictMode>\r\n\t\t<HashRouter>\r\n\t\t\t<App>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/:week(\\d)/:day(\\d)?\">\r\n\t\t\t\t\t\t<Sets />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t</App>\r\n\t\t</HashRouter>\r\n\t</StrictMode>\r\n)\r\n\r\nexport default AppRouter\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n\t\t),\r\n)\r\n\r\ntype Config = {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(\r\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n\t\t\twindow.location.href,\r\n\t\t)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type')\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.')\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister()\r\n\t\t})\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport AppRouter from './AppRouter'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}